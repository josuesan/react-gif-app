{"version":3,"sources":["components/AddCategory.jsx","helpers/getGifs.js","components/GifGridItem.jsx","components/GifGrid.jsx","hooks/useFetchGifs.js","GifExpertApp.jsx","index.js"],"names":["AddCategory","setCategories","useState","category","setCategory","onSubmit","e","preventDefault","trim","length","prevState","type","onChange","target","value","placeholder","getGifs","a","fetch","encodeURI","res","json","data","gifs","map","img","id","title","url","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","handleGifs","useCallback","useEffect","useFetchGifs","key","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"qMAmCeA,EAjCK,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EACTC,mBAAS,IADA,mBAClCC,EADkC,KACxBC,EADwB,KAiBzC,OACE,0BAAMC,SAXa,SAACC,GACpBA,EAAEC,iBACEJ,EAASK,OAAOC,OAAS,IAC3BR,GAAc,SAAAS,GAAS,OACrBP,GADqB,mBAElBO,OAELN,EAAY,OAKZ,4CACA,2BACEO,KAAK,OACLC,SAnBiB,SAACN,GACtBF,EAAYE,EAAEO,OAAOC,QAmBjBA,MAAOX,EACPY,YAAY,qB,uBCvBPC,EAAO,uCAAG,WAAOb,GAAP,qBAAAc,EAAA,sEACHC,MAAM,GAAD,OAHT,gCAGS,qBAAwBC,UAAUhB,GAAlC,6BAJb,qCAGW,cACfiB,EADe,gBAEEA,EAAIC,OAFN,uBAEbC,EAFa,EAEbA,KACFC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EAC3B,MAAO,CACLC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXC,IAAG,UAAEH,EAAII,cAAN,aAAE,EAAYC,iBAAiBF,QAPjB,kBAUdL,GAVc,2CAAH,sDCcLQ,EAdK,SAAC,GAAoB,IAAlBJ,EAAiB,EAAjBA,MAAOC,EAAU,EAAVA,IAC5B,OACE,yBAAKI,UAAU,0CACb,yBAAKC,IAAKL,EAAKM,IAAKP,IACpB,2BAAIA,MCuBKQ,EAzBC,SAAC,GAAkB,IAAhBhC,EAAe,EAAfA,SAAe,ECFN,SAACA,GAAc,IAAD,EACdD,mBAAS,CACjCoB,KAAM,GACNc,SAAS,IAH6B,mBACjCC,EADiC,KAC1BC,EAD0B,KAMlCC,EAAaC,sBAAW,sBAAC,4BAAAvB,EAAA,sEACVD,EAAQb,GADE,OACvBoB,EADuB,OAE7Be,EAAS,CACPhB,KAAMC,EACNa,SAAS,IAJkB,2CAM5B,CAACjC,IAMJ,OAJAsC,qBAAU,WACRF,MACC,CAACA,IAEGF,EDd2BK,CAAavC,GAAjC0B,EAFkB,EAExBP,KAAcc,EAFU,EAEVA,QACtB,OACE,oCACE,wBAAIJ,UAAU,qCAAqC7B,GAClDiC,GACC,uBAAGJ,UAAU,oCAAb,cAEF,yBAAKA,UAAU,aACZH,EAAOL,KAAI,SAAAC,GAAG,OACb,kBAAC,EAAD,eACEkB,IAAKlB,EAAIC,IACLD,UEODmB,EArBM,WAAO,IAAD,EACW1C,mBAClC,CAAC,kBAFsB,mBAClB2C,EADkB,KACN5C,EADM,KAIzB,OACE,oCACE,+CACA,kBAAC,EAAD,CAAaA,cAAeA,IAC5B,6BACA,4BACG4C,EAAWrB,KAAI,SAAArB,GAAQ,OACtB,kBAAC,EAAD,CACEwC,IAAKxC,EACLA,SAAUA,W,MCZtB2C,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.389cb4e6.chunk.js","sourcesContent":["import React, { useState } from 'react'\nimport propTypes from 'prop-types';\nconst AddCategory = ({ setCategories }) => {\n  const [category, setCategory] = useState('');\n\n  const handleCategory = (e) => {\n    setCategory(e.target.value);\n  }\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (category.trim().length > 2) {\n      setCategories(prevState => [\n        category,\n        ...prevState\n      ]);\n      setCategory('');\n    }\n  }\n  return (\n    <form onSubmit={handleSubmit}>\n      <h2>Add Category</h2>\n      <input\n        type=\"text\"\n        onChange={handleCategory}\n        value={category}\n        placeholder=\"Add a Category\"\n      />\n    </form>\n  )\n};\n\nAddCategory.propTypes = {\n  setCategories: propTypes.func.isRequired\n}\nexport default AddCategory;","const key = 'ZXS5J0cIXnXakVSI255TXtq3C3RJOZ38';\nconst baseUrl = 'https://api.giphy.com/v1/gifs';\n\nexport const getGifs = async (category) => {\n  const res = await fetch(`${baseUrl}/search?q=${encodeURI(category)}&limit=10&api_key=${key}`);\n  const { data } = await res.json();\n  const gifs = data.map(img => {\n    return {\n      id: img.id,\n      title: img.title,\n      url: img.images?.downsized_medium.url,\n    };\n  });\n  return gifs;\n}","import React from 'react'\nimport PropTypes from 'prop-types'\n\nconst GifGridItem = ({ title, url }) => {\n  return (\n    <div className=\"card animate__animated animate__fadeIn\">\n      <img src={url} alt={title} />\n      <p>{title}</p>\n    </div>\n  )\n}\n\nGifGridItem.propTypes = {\n  title: PropTypes.string.isRequired,\n  url: PropTypes.string.isRequired\n}\n\nexport default GifGridItem\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport { useFetchGifs } from '../hooks/useFetchGifs';\nimport GifGridItem from './GifGridItem';\n\nconst GifGrid = ({ category }) => {\n\n  const { data: images, loading } = useFetchGifs(category);\n  return (\n    <>\n      <h3 className=\"animate__animated animate__fadeIn\">{category}</h3>\n      {loading && (\n        <p className=\"animate__animated animate__flash\">loading...</p>\n      )}\n      <div className=\"card-grid\">\n        {images.map(img => (\n          <GifGridItem\n            key={img.id}\n            {...img}\n          />\n        ))}\n      </div>\n    </>\n  )\n}\n\nGifGrid.propTypes = {\n  category: PropTypes.string.isRequired\n}\n\nexport default GifGrid;\n","import { useState, useEffect, useCallback } from \"react\";\nimport { getGifs } from \"../helpers/getGifs\";\n\nexport const useFetchGifs = (category) => {\n  const [state, setState] = useState({\n    data: [],\n    loading: true\n  });\n\n  const handleGifs = useCallback(async () => {\n    const gifs = await getGifs(category);\n    setState({\n      data: gifs,\n      loading: false\n    });\n  }, [category]);\n\n  useEffect(() => {\n    handleGifs();\n  }, [handleGifs]);\n\n  return state;\n};\n","import React, { useState } from 'react'\nimport AddCategory from './components/AddCategory';\nimport GifGrid from './components/GifGrid';\n\nconst GifExpertApp = () => {\n  const [categories, setCategories] = useState(\n    ['One punch man']\n  );\n  return (\n    <>\n      <h1>Gift Expert App</h1>\n      <AddCategory setCategories={setCategories} />\n      <hr />\n      <ol>\n        {categories.map(category => (\n          <GifGrid\n            key={category}\n            category={category}\n          />\n        ))}\n      </ol>\n    </>\n  )\n}\n\nexport default GifExpertApp\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './GifExpertApp';\nimport './index.css';\n\nReactDOM.render(\n  <GifExpertApp />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}